# Generated by Django 4.2.7 on 2025-07-30 22:31

from decimal import Decimal
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('service_app', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('first_name', models.CharField(max_length=100)),
                ('phone_number', models.CharField(max_length=20)),
                ('email', models.EmailField(max_length=254)),
                ('address', models.TextField()),
                ('latitude', models.DecimalField(decimal_places=8, max_digits=10)),
                ('longitude', models.DecimalField(decimal_places=8, max_digits=11)),
                ('google_place_id', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'contacts',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Quote',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('distance_to_location', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('base_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('trip_surcharge', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('question_adjustments', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('total_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('submitted', 'Submitted'), ('confirmed', 'Confirmed'), ('expired', 'Expired')], default='draft', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('contact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quotes', to='user_app.contact')),
                ('nearest_location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='service_app.location')),
                ('package', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='quotes', to='service_app.package')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='quotes', to='service_app.service')),
            ],
            options={
                'db_table': 'quotes',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='QuoteQuestionAnswer',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('yes_no_answer', models.BooleanField(blank=True, null=True)),
                ('price_adjustment', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='service_app.question')),
                ('quote', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='question_answers', to='user_app.quote')),
                ('selected_option', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='service_app.questionoption')),
            ],
            options={
                'db_table': 'quote_question_answers',
                'unique_together': {('quote', 'question')},
            },
        ),
    ]
